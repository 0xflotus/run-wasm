[{"/Users/kennethcassel/slip/run-wasm/.eslintrc.js":"1","/Users/kennethcassel/slip/run-wasm/commitlint.config.js":"2","/Users/kennethcassel/slip/run-wasm/example/src/App.test.tsx":"3","/Users/kennethcassel/slip/run-wasm/example/src/App.tsx":"4","/Users/kennethcassel/slip/run-wasm/example/src/index.tsx":"5","/Users/kennethcassel/slip/run-wasm/example/src/react-app-env.d.ts":"6","/Users/kennethcassel/slip/run-wasm/example/src/reportWebVitals.ts":"7","/Users/kennethcassel/slip/run-wasm/example/src/setupTests.ts":"8","/Users/kennethcassel/slip/run-wasm/example-nextjs/next-env.d.ts":"9","/Users/kennethcassel/slip/run-wasm/example-nextjs/next.config.js":"10","/Users/kennethcassel/slip/run-wasm/example-nextjs/pages/_app.tsx":"11","/Users/kennethcassel/slip/run-wasm/example-nextjs/pages/api/hello.ts":"12","/Users/kennethcassel/slip/run-wasm/example-nextjs/pages/index.tsx":"13","/Users/kennethcassel/slip/run-wasm/example-nextjs/postcss.config.js":"14","/Users/kennethcassel/slip/run-wasm/example-nextjs/tailwind.config.js":"15","/Users/kennethcassel/slip/run-wasm/src/RunWasmClient.ts":"16","/Users/kennethcassel/slip/run-wasm/src/index.tsx":"17"},{"size":425,"mtime":1631915078972,"results":"18","hashOfConfig":"19"},{"size":66,"mtime":1631830708139,"results":"20","hashOfConfig":"19"},{"size":266,"mtime":1631830708140,"results":"21","hashOfConfig":"22"},{"size":944,"mtime":1631905954187,"results":"23","hashOfConfig":"22"},{"size":493,"mtime":1631830708140,"results":"24","hashOfConfig":"22"},{"size":40,"mtime":1631830708141,"results":"25","hashOfConfig":"22"},{"size":416,"mtime":1631830708141,"results":"26","hashOfConfig":"22"},{"size":240,"mtime":1631830708141,"results":"27","hashOfConfig":"22"},{"size":245,"mtime":1631905954185,"results":"28","hashOfConfig":"29"},{"size":87,"mtime":1631905954185,"results":"30","hashOfConfig":"29"},{"size":221,"mtime":1631905954185,"results":"31","hashOfConfig":"29"},{"size":307,"mtime":1631905954185,"results":"32","hashOfConfig":"29"},{"size":2341,"mtime":1631905954185,"results":"33","hashOfConfig":"29"},{"size":82,"mtime":1631905954185,"results":"34","hashOfConfig":"29"},{"size":160,"mtime":1631905954186,"results":"35","hashOfConfig":"29"},{"size":787,"mtime":1631897195749,"results":"36","hashOfConfig":"19"},{"size":936,"mtime":1631898055607,"results":"37","hashOfConfig":"19"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h8ccc",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7js3kv",{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"3v21j8",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},"/Users/kennethcassel/slip/run-wasm/.eslintrc.js",[],"/Users/kennethcassel/slip/run-wasm/commitlint.config.js",[],"/Users/kennethcassel/slip/run-wasm/example/src/App.test.tsx",[],"/Users/kennethcassel/slip/run-wasm/example/src/App.tsx",["75","76"],"import React, { useEffect, useState } from 'react'\nimport { RunWasm, createRunWasmClient, createPythonClient } from 'run-wasm'\nimport './App.css'\ndeclare global {\n  // <- [reference](https://stackoverflow.com/a/56458070/11542903)\n  interface Window {\n    pyodide: any\n    languagePluginLoader: any\n  }\n}\n\nfunction App() {\n  const [output, setOutput] = useState('loading...')\n  const [inputCode, setInputCode] = useState('')\n  let pythonClient = createPythonClient(window.pyodide)\n\n  async function runCode(code: string) {\n    let output = await pythonClient.run({ code })\n    setOutput(output)\n  }\n  return (\n    <div className=\"App\">\n      <RunWasm language=\"Python\" code={inputCode} />\n      <input\n        value={inputCode}\n        onChange={(e) => {\n          setInputCode(e.target.value)\n        }}\n      />\n      <button onClick={() => runCode(inputCode)}></button>\n\n      {output ?? <p>{output}</p>}\n    </div>\n  )\n}\n\nexport default App\n","/Users/kennethcassel/slip/run-wasm/example/src/index.tsx",[],"/Users/kennethcassel/slip/run-wasm/example/src/react-app-env.d.ts",[],"/Users/kennethcassel/slip/run-wasm/example/src/reportWebVitals.ts",[],"/Users/kennethcassel/slip/run-wasm/example/src/setupTests.ts",[],"/Users/kennethcassel/slip/run-wasm/example-nextjs/next-env.d.ts",["77"],"/Users/kennethcassel/slip/run-wasm/example-nextjs/next.config.js",[],"/Users/kennethcassel/slip/run-wasm/example-nextjs/pages/_app.tsx",["78"],"/Users/kennethcassel/slip/run-wasm/example-nextjs/pages/api/hello.ts",["79"],"/Users/kennethcassel/slip/run-wasm/example-nextjs/pages/index.tsx",["80"],"/Users/kennethcassel/slip/run-wasm/example-nextjs/postcss.config.js",[],"/Users/kennethcassel/slip/run-wasm/example-nextjs/tailwind.config.js",[],"/Users/kennethcassel/slip/run-wasm/src/RunWasmClient.ts",["81","82","83"],"/* eslint-disable @typescript-eslint/no-explicit-any */\n/* \nA client for running arbitrary WASM code.\n*/\n\nexport class RunWasmClient {\n  public constructor(protected language: string) {}\n\n  public run({ input }: { input: string }): Promise<string> {\n    return new Promise((resolve) => {\n      resolve(input)\n    })\n  }\n}\n\nexport class PythonClient {\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  public constructor(protected pyodide: any) {}\n\n  public run({ code }: { code: string }): Promise<string> {\n    return new Promise((resolve) => {\n      const output = this.pyodide.loadPackage([]).then(() => {\n        const output = this.pyodide.runPython(code)\n        console.log(output)\n        return output\n      })\n      resolve(output)\n    })\n  }\n}\n","/Users/kennethcassel/slip/run-wasm/src/index.tsx",["84"],"/* eslint-disable unicorn/consistent-function-scoping */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react'\nimport { RunWasmClient, PythonClient } from './RunWasmClient'\n\ndeclare global {\n  // <- [reference](https://stackoverflow.com/a/56458070/11542903)\n  interface Window {\n    pyodide: any\n    languagePluginLoader: any\n  }\n}\n\nfunction RunWasm({\n  language,\n  code,\n}: {\n  language: string\n  code: string\n}): JSX.Element {\n  return (\n    <div>\n      This will be an easy to use code editor that shows the power of run-wasm.\n      It will run this language:{language} and execute this code:\n      <code>{code}</code>\n    </div>\n  )\n}\n\nconst createRunWasmClient = (language: string): RunWasmClient => {\n  return new RunWasmClient(language)\n}\n\nconst createPythonClient = (pyodide: string): PythonClient => {\n  return new PythonClient(pyodide)\n}\nexport { RunWasm, createRunWasmClient, createPythonClient }\n",{"ruleId":"85","severity":1,"message":"86","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"89","line":2,"column":19,"nodeType":"87","messageId":"88","endLine":2,"endColumn":38},{"ruleId":null,"fatal":true,"severity":2,"message":"90"},{"ruleId":null,"fatal":true,"severity":2,"message":"91"},{"ruleId":null,"fatal":true,"severity":2,"message":"92"},{"ruleId":null,"fatal":true,"severity":2,"message":"93"},{"ruleId":"94","severity":1,"message":"95","line":22,"column":51,"nodeType":"87","endLine":22,"endColumn":55},{"ruleId":"96","severity":1,"message":"97","line":24,"column":9,"nodeType":"98","messageId":"99","endLine":24,"endColumn":20},{"ruleId":"100","severity":1,"message":"101","line":27,"column":15,"nodeType":"87","messageId":"102","endLine":27,"endColumn":21},{"ruleId":null,"message":"103","line":1,"column":1,"severity":1,"nodeType":null},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'createRunWasmClient' is defined but never used.","Parsing error: \"parserOptions.project\" has been set for @typescript-eslint/parser.\nThe file does not match your project config: example-nextjs/next-env.d.ts.\nThe file must be included in at least one of the projects provided.","Parsing error: \"parserOptions.project\" has been set for @typescript-eslint/parser.\nThe file does not match your project config: example-nextjs/pages/_app.tsx.\nThe file must be included in at least one of the projects provided.","Parsing error: \"parserOptions.project\" has been set for @typescript-eslint/parser.\nThe file does not match your project config: example-nextjs/pages/api/hello.ts.\nThe file must be included in at least one of the projects provided.","Parsing error: \"parserOptions.project\" has been set for @typescript-eslint/parser.\nThe file does not match your project config: example-nextjs/pages/index.tsx.\nThe file must be included in at least one of the projects provided.","promise/prefer-await-to-then","Prefer await to then()/catch()/finally().","no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/no-unsafe-argument","Unsafe argument of type `any` assigned to a parameter of type `string | PromiseLike<string>`.","unsafeArgument","Unused eslint-disable directive (no problems were reported from 'unicorn/consistent-function-scoping')."]